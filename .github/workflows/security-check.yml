name: Security and Quality Check

on:
  pull_request:
    branches: [ main, dev ]
  push:
    branches: [ main, dev ]

jobs:
  # Job 1: ÊéÉÊèèÊïèÊÑüË≥áÊñô
  secret-scan:
    name: üîç Scan for Secrets
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Áç≤ÂèñÂÆåÊï¥Ê≠∑Âè≤‰ª•ÊéÉÊèèÊâÄÊúâ commits
      
      # TruffleHog - ÊéÉÊèè secrets Âíå credentials
      - name: TruffleHog Secret Scan
        uses: trufflesecurity/trufflehog@v3.63.7
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified
      
      # GitLeaks - Âè¶‰∏ÄÂÄãÂº∑Â§ßÁöÑ secret ÊéÉÊèèÂ∑•ÂÖ∑
      - name: Gitleaks Secret Scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Ëá™Ë®ÇÊ™¢Êü• - Á¢∫‰øùÊ≤íÊúâÁí∞Â¢ÉÊ™îÊ°à
      - name: Check for Environment Files
        run: |
          # Ê™¢Êü•ÊòØÂê¶Êúâ env Áõ∏ÈóúÊ™îÊ°à
          if find . -type f \( -name "*.env*" -o -name "env" \) ! -path "./.git/*" ! -path "./node_modules/*" | grep .; then
            echo "‚ùå Found environment files that should not be committed!"
            echo "Please add them to .gitignore"
            exit 1
          fi
          echo "‚úÖ No environment files found"
      
      # Ê™¢Êü•Ê™îÊ°àÂêçÁ®±Ê®°Âºè
      - name: Check for Unwanted Files
        run: |
          # Ê™¢Êü•ÂÇô‰ªΩÂíåÂûÉÂúæÊ™îÊ°à
          UNWANTED=$(find . -type f \( \
            -name "*.backup" -o \
            -name "*.bak" -o \
            -name "*.old" -o \
            -name "*.orig" -o \
            -name "*.tmp" -o \
            -name "*.temp" -o \
            -name "*.swp" -o \
            -name "*.swo" -o \
            -name "*~" -o \
            -name ".DS_Store" -o \
            -name "Thumbs.db" \
          \) ! -path "./.git/*" ! -path "./node_modules/*")
          
          if [ ! -z "$UNWANTED" ]; then
            echo "‚ùå Found unwanted files:"
            echo "$UNWANTED"
            exit 1
          fi
          echo "‚úÖ No unwanted files found"
      
      # Ê™¢Êü•Êï∏Â≠óÁµêÂ∞æÁöÑË≥áÊñôÂ§æ
      - name: Check for Numbered Folders
        run: |
          # Â∞ãÊâæÁ©∫Ê†º+Êï∏Â≠óÁµêÂ∞æÁöÑË≥áÊñôÂ§æ
          NUMBERED_DIRS=$(find . -type d -regex ".*/[^/]+ [0-9]+" ! -path "./.git/*" ! -path "./node_modules/*")
          COPY_DIRS=$(find . -type d -regex ".*/[^/]+ copy" ! -path "./.git/*" ! -path "./node_modules/*")
          
          if [ ! -z "$NUMBERED_DIRS" ] || [ ! -z "$COPY_DIRS" ]; then
            echo "‚ùå Found backup/duplicate folders:"
            [ ! -z "$NUMBERED_DIRS" ] && echo "$NUMBERED_DIRS"
            [ ! -z "$COPY_DIRS" ] && echo "$COPY_DIRS"
            exit 1
          fi
          echo "‚úÖ No backup folders found"

  # Job 2: Á®ãÂºèÁ¢ºÂìÅË≥™Ê™¢Êü•
  code-quality:
    name: üìù Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true  # Êö´ÊôÇÂÖÅË®± lint ÈåØË™§
      
      - name: Run Type Check
        run: npm run type-check
        continue-on-error: true  # Êö´ÊôÇÂÖÅË®± type ÈåØË™§
      
      - name: Check for console.log statements
        run: |
          # Âú®ÁîüÁî¢‰ª£Á¢º‰∏≠Ê™¢Êü• console.logÔºàÊéíÈô§Ê∏¨Ë©¶Ê™îÊ°àÔºâ
          CONSOLE_LOGS=$(grep -r "console\.log" --include="*.js" --include="*.jsx" --include="*.ts" --include="*.tsx" \
            --exclude-dir=node_modules \
            --exclude-dir=.git \
            --exclude-dir=__tests__ \
            --exclude-dir=tests \
            --exclude="*.test.*" \
            --exclude="*.spec.*" \
            . || true)
          
          if [ ! -z "$CONSOLE_LOGS" ]; then
            echo "‚ö†Ô∏è  Warning: Found console.log statements in code:"
            echo "$CONSOLE_LOGS"
            echo "Consider removing them before production deployment"
          fi

  # Job 3: ‰æùË≥¥ÊÄßÂÆâÂÖ®ÊéÉÊèè
  dependency-check:
    name: üîí Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run npm audit
        run: |
          npm audit --audit-level=high || true
          echo "Note: High and critical vulnerabilities should be addressed"

  # Job 4: Ê™îÊ°àÂ§ßÂ∞èÊ™¢Êü•
  size-check:
    name: üì¶ File Size Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check for large files
        run: |
          # Ê™¢Êü•Ë∂ÖÈÅé 5MB ÁöÑÊ™îÊ°à
          echo "Checking for large files..."
          find . -type f -size +5M ! -path "./.git/*" ! -path "./node_modules/*" -exec ls -lh {} \; | while read line; do
            echo "‚ö†Ô∏è  Warning: Large file (>5MB): $line"
          done
          echo "Note: Consider using Git LFS for large files if needed"
          
  # Á∏ΩÁµê Job
  summary:
    name: ‚úÖ Security Check Summary
    needs: [secret-scan, code-quality, dependency-check, size-check]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Summary
        run: |
          echo "üéâ Security and quality checks completed!"
          echo ""
          echo "Results:"
          echo "- Secret Scan: ${{ needs.secret-scan.result }}"
          echo "- Code Quality: ${{ needs.code-quality.result }}"
          echo "- Dependency Check: ${{ needs.dependency-check.result }}"
          echo "- Size Check: ${{ needs.size-check.result }}"
          
          if [ "${{ needs.secret-scan.result }}" = "failure" ]; then
            echo ""
            echo "‚ùå CRITICAL: Secret scan failed! Fix immediately!"
            exit 1
          fi